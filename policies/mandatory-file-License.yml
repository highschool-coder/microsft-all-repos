# metadata
name: This repo is missing a LICENSE file
description: This is a config to check if a LICENSE is present in a repo.

# filters
resource: repository
where:
- |
  repository.name.startsWith("GitOps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NUWA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NeuralSpeech", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-mobile-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SATechnicalOnboarding", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SSMA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-azua", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-migration-assistant", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebRTC-universal-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-RForDataProfessionals", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project_olive", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSLinux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-app-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StemGNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("alps-demos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TACO", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LoRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectML-ShooterGame", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals(".github", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("containerregistry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nodejs-guidelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ros_azure_iothub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("varuna", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("optimization-insights", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mpcen-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-germany", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Virtual-Robot-Overlay-for-Online-Meetings", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL-Go-PTE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Identity-ADO-API-Coverage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-web-frontend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentui-astro-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MRTK3-iet-tutorials", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mccp-cli-actions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics-AX-Integration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FMLab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rai-orchestrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vert-papers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GTADocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UniTAB", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OHDSIonAzure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MeshGraphormer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("brainstorm-fluidframework-m365-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msra-star", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RoadDetections", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-azuresqlworkshop", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("building-damage-assessment-cnn-siamese", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gh-sync", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-data-wrangler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-dev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-standup-teams", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mccp-management-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winrtc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dropvalidator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinObjC-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slingshot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("aims-tscience-nl2code", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dia-rs", StringComparison.InvariantCultureIgnoreCase)

# primitive configuration
configuration:
    mandatoryFiles:
     issueTitle: This repo is missing a LICENSE file
     issueBody: |
            This repository is currently missing a LICENSE file.
            
            A license helps users understand how to use your project in a compliant manner. You can find the standard MIT license Microsoft uses at: https://github.com/microsoft/repo-templates/blob/main/shared/LICENSE.

            If you would like to learn more about open source licenses, please visit the document at https://aka.ms/license (Microsoft-internal guidance).
     prTitle: Adding Microsoft LICENSE
     prBody: 
     file:
      - path: license((-|_)([a-z0-9])*)*(\.[-_a-z0-9]+)*
        ignoreCase: true
     issueReminder:
        firstReminderGapDays: -1               
        followUpReminderGapDays: 0
